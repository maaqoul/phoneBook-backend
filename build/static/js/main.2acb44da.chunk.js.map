{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/personService.js","components/Notification.js","App.js","index.js"],"names":["Filter","search","handleOnSearch","type","value","onChange","PersonForm","addPerson","newName","handleNewName","newNumber","handleNewNumber","onSubmit","Persons","persons","deletePerson","map","person","key","id","name","number","onClick","axios","get","then","result","data","post","put","delete","Notification","message","className","App","useState","setPersons","filteredPersons","setFilteredPersons","setNewName","setNewNumber","setNewSearch","notification","setNotification","showNotification","setTimeout","useEffect","personService","response","handlePersonsResponse","catch","error","target","filter","toLowerCase","includes","event","preventDefault","personFound","find","window","confirm","returnedPerson","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAUeA,EARA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,eACtB,OACI,oDACwB,2BAAOC,KAAK,OAAOC,MAAOH,EAAQI,SAAUH,MCa7DI,EAhBI,SAAC,GAAqE,IAApEC,EAAmE,EAAnEA,UAAWC,EAAwD,EAAxDA,QAASC,EAA+C,EAA/CA,cAAeC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,gBAC/D,OACI,0BAAMC,SAAUL,GACZ,sCACU,2BAAOH,MAAOI,EAASH,SAAUI,KAE3C,wCACY,2BAAOL,MAAOM,EAAWL,SAAUM,KAE/C,6BACI,4BAAQR,KAAK,UAAb,UCADU,EAVC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACxB,OACID,EAAQE,KAAI,SAAAC,GAAM,OACd,yBAAKC,IAAKD,EAAOE,IACZF,EAAOG,KADZ,IACmBH,EAAOI,OACtB,4BAAQC,QAAS,kBAAMP,EAAaE,EAAOE,GAAIF,EAAOG,QAAtD,e,gBCiBD,EApBO,WAElB,OADgBG,IAAMC,IAAN,UAHJ,OAGI,aAAgCC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,SAmB3D,EAfM,SAACV,GAElB,OADgBM,IAAMK,KAAN,UARJ,OAQI,YAAiCX,GAAQQ,MAAK,SAAAC,GAAM,OAAIA,EAAOC,SAcpE,EAVM,SAACR,EAAIF,GAEtB,OADgBM,IAAMM,IAAN,UAbJ,OAaI,oBAAgCV,GAAMF,GAAQQ,MAAK,SAAAC,GAAM,OAAIA,EAAOC,SASzE,EALM,SAACR,GAElB,OADgBI,IAAMO,OAAN,UAlBJ,OAkBI,oBAAmCX,IAAMM,MAAK,SAAAC,GAAM,OAAIA,EAAOC,SCNpEI,EAZM,SAAC,GAAuB,IAArB5B,EAAoB,EAApBA,KAAM6B,EAAc,EAAdA,QAC1B,OAAKA,EAKD,yBAAKC,UAAW9B,GACX6B,GALE,MC8HAE,EA3HH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTrB,EADS,KACAsB,EADA,OAE8BD,mBAAS,MAFvC,mBAETE,EAFS,KAEQC,EAFR,OAGcH,mBAAS,IAHvB,mBAGT3B,EAHS,KAGA+B,EAHA,OAIkBJ,mBAAS,IAJ3B,mBAITzB,EAJS,KAIE8B,EAJF,OAKeL,mBAAS,IALxB,mBAKTlC,EALS,KAKDwC,EALC,OAMwBN,mBAAS,CAAEH,QAAS,KAAM7B,KAAM,OANxD,mBAMTuC,EANS,KAMKC,EANL,KAsBVC,EAAmB,SAACzC,EAAM6B,GAC9BW,EAAgB,CAAEX,UAAS7B,SAC3B0C,YAAW,WACTF,EAAgB,CAAEX,QAAS,KAAM7B,KAAM,SACtC,MA8EL,OAXA2C,qBACE,WACEC,IAEGtB,MAAK,SAAAuB,GAAQ,OAzFU,SAACA,GACzBA,GACFZ,EAAWY,GAuFSC,CAAsBD,MACvCE,OAAM,SAAAC,GACLP,EAAiB,qDAAsD,cAE1E,IAIH,6BACE,yCACA,kBAAC,EAAD,CAAczC,KAAMuC,EAAavC,KAAM6B,QAASU,EAAaV,UAC7D,kBAAC,EAAD,CAAQ/B,OAAQA,EAAQC,eA3CL,SAAC,GAAgB,IAAdkD,EAAa,EAAbA,OACxB,GAAMA,EAAOhD,MAAO,CAClBqC,EAAaW,EAAOhD,OACpB,IAAMiC,EAAkBvB,EAAQuC,QAAO,SAAApC,GAAM,OAAIA,EAAOG,KAAKkC,cAAcC,SAASH,EAAOhD,MAAMkD,kBACjGhB,EAAmBD,QAEnBI,EAAa,IACbH,EAAmB,SAqCnB,yCACA,kBAAC,EAAD,CACE/B,UAlFY,SAACiD,GACjBA,EAAMC,iBAEN,IAAIC,EAAc5C,EAAQ6C,MAAK,SAAA1C,GAAM,OAAIA,EAAOG,KAAKkC,gBAAkB9C,EAAQ8C,iBAE/E,GAAII,EAAa,CAEf,IADeE,OAAOC,QAAP,UAAkBrD,EAAlB,0EAYb,OAVAkD,EAAW,eAAQA,EAAR,CAAqBrC,OAAQX,IACxCqC,EAA2BW,EAAYvC,GAAIuC,GAAajC,MACtD,SAAAqC,GACE1B,EAAWtB,EAAQE,KAAI,SAAAC,GAAM,OAAIA,EAAOE,KAAOuC,EAAYvC,GAAKF,EAAS6C,MACzElB,EAAiB,GAAD,OAAIkB,EAAezC,OAAnB,yBAAkD,cAEpE6B,OAAM,SAAAC,GACNP,EAAiB,qDAAsD,gBAKtE,CAELG,EADe,CAAE3B,KAAMZ,EAASa,OAAQX,IACLe,MAAK,SAACuB,GACvCZ,EAAWtB,EAAQiD,OAAOf,IAC1BT,EAAW,IACXC,EAAa,IACbI,EAAiB,GAAD,OAAII,EAAS5B,KAAb,uBAAwC,cAEvD8B,OAAM,SAAAC,GACLP,EAAiB,qDAAsD,cAsDzEpC,QAASA,EACTE,UAAWA,EACXD,cApGgB,SAAC,GAAgB,IAAd2C,EAAa,EAAbA,OACvBb,EAAWa,EAAOhD,QAoGdO,gBAjGkB,SAAC,GAAgB,IAAdyC,EAAa,EAAbA,OACzBZ,EAAaY,EAAOhD,UAkGlB,uCACA,kBAAC,EAAD,CAASU,QAAUuB,GAAkBvB,EAA2BC,aA1C/C,SAACI,EAAIC,GACTwC,OAAOC,QAAP,iBAAyBzC,EAAzB,QAEb2B,EACgB5B,GACbM,MAAK,WACJW,EAAWtB,EAAQuC,QAAO,SAAApC,GAAM,OAAIA,EAAOE,KAAOA,MAClDyB,EAAiB,GAAD,OAAIxB,EAAJ,uBAA+B,cAEhD8B,OAAM,SAAAC,GACLP,EAAiB,qDAAsD,iBCxFjFoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2acb44da.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ search, handleOnSearch }) => {\r\n    return (\r\n        <div>\r\n            filter shown with : <input type=\"text\" value={search} onChange={handleOnSearch} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst PersonForm = ({addPerson, newName, handleNewName, newNumber, handleNewNumber}) => {\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNewName} />\r\n            </div>\r\n            <div>\r\n                Number: <input value={newNumber} onChange={handleNewNumber} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm;","import React from \"react\";\r\n\r\nconst Persons = ({ persons, deletePerson }) => {\r\n    return (\r\n        persons.map(person => (\r\n            <div key={person.id}>\r\n                {person.name} {person.number}\r\n                <button onClick={() => deletePerson(person.id, person.name)}>delete</button>\r\n            </div>)\r\n        )\r\n    )\r\n}\r\nexport default Persons;","import axios from 'axios';\r\n\r\nconst baseUrl = '/api';\r\n\r\nconst getAllPersons = () => {\r\n    const promise = axios.get(`${baseUrl}/persons`).then(result => result.data);\r\n    return promise;\r\n}\r\n\r\nconst createPerson = (person) => {\r\n    const promise = axios.post(`${baseUrl}/persons`, person).then(result => result.data);\r\n    return promise;\r\n}\r\n\r\nconst updatePerson = (id, person) => {\r\n    const promise = axios.put(`${baseUrl}/persons/${id}`, person).then(result => result.data);\r\n    return promise;\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const promise = axios.delete(`${baseUrl}/persons/${id}`).then(result => result.data);\r\n    return promise;\r\n}\r\n\r\nexport default {\r\n    getAllPersons,\r\n    createPerson,\r\n    updatePerson,\r\n    deletePerson\r\n}","import React from 'react';\r\n\r\nconst Notification = ({ type, message }) => {\r\n    if (!message) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={type}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport personService from './services/personService';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filteredPersons, setFilteredPersons] = useState(null);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [search, setNewSearch] = useState('');\n  const [notification, setNotification] = useState({ message: null, type: null })\n\n  const handlePersonsResponse = (response) => {\n    if (response) {\n      setPersons(response)\n    }\n  }\n\n  const handleNewName = ({ target }) => {\n    setNewName(target.value);\n  }\n\n  const handleNewNumber = ({ target }) => {\n    setNewNumber(target.value);\n  }\n\n  const showNotification = (type, message) => {\n    setNotification({ message, type });\n    setTimeout(() => {\n      setNotification({ message: null, type: null });\n    }, 3000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    let personFound = persons.find(person => person.name.toLowerCase() === newName.toLowerCase());\n\n    if (personFound) {\n      const answer = window.confirm(`${newName} is already added to phone book, replace the old number with new one!`);\n      if (answer) {\n        personFound = { ...personFound, number: newNumber }\n        personService.updatePerson(personFound.id, personFound).then(\n          returnedPerson => {\n            setPersons(persons.map(person => person.id !== personFound.id ? person : returnedPerson))\n            showNotification(`${returnedPerson.number} updated with success`, 'success');\n          }\n        ).catch(error => {\n          showNotification(`an error has been occurred please try again later!`, 'error');\n        })\n      } else {\n        return;\n      }\n    } else {\n      const person = { name: newName, number: newNumber };\n      personService.createPerson(person).then((response) => {\n        setPersons(persons.concat(response))\n        setNewName('');\n        setNewNumber('');\n        showNotification(`${response.name} added with success`, 'success');\n      })\n        .catch(error => {\n          showNotification(`an error has been occurred please try again later!`, 'error');\n        })\n    }\n\n\n  }\n\n  const handleOnSearch = ({ target }) => {\n    if (!!target.value) {\n      setNewSearch(target.value)\n      const filteredPersons = persons.filter(person => person.name.toLowerCase().includes(target.value.toLowerCase()))\n      setFilteredPersons(filteredPersons)\n    } else {\n      setNewSearch('')\n      setFilteredPersons(null)\n    }\n  }\n\n  const deletePerson = (id, name) => {\n    const answer = window.confirm(`delete ${name} ?`);\n    if (answer) {\n      personService\n        .deletePerson(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id));\n          showNotification(`${name} added with success`, 'success');\n        })\n        .catch(error => {\n          showNotification(`an error has been occurred please try again later!`, 'error');\n        })\n    } else {\n      return;\n    }\n  }\n\n  useEffect(\n    () => {\n      personService\n        .getAllPersons()\n        .then(response => handlePersonsResponse(response))\n        .catch(error => {\n          showNotification(`an error has been occurred please try again later!`, 'error');\n        })\n    }, [])\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification type={notification.type} message={notification.message} />\n      <Filter search={search} handleOnSearch={handleOnSearch} />\n      <h3>add a new</h3>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNewName={handleNewName}\n        handleNewNumber={handleNewNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={!filteredPersons ? persons : filteredPersons} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}